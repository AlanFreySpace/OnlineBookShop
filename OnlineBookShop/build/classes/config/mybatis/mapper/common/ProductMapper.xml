<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.you.a.dao.common.ProductDao">
  
  	<insert id="add" parameterType="com.you.a.entity.common.Product">
  		insert into product(id,productCategoryId,name,tags,imageUrl,price,stock,sellNum,viewNum,commentNum,desc,createTime) values(null,#{productCategoryId},#{name},#{tags},#{imageUrl},#{price},#{stock},#{sellNum},#{viewNum},#{commentNum},#{desc},#{createTime})
  	</insert>
  	
  	<update id="edit" parameterType="com.you.a.entity.common.Product">
  		update product set productCategoryId=#{productCategoryId},name=#{name},tags=#{tags},imageUrl=#{imageUrl},price=#{price},stock=#{stock},desc=#{desc},createTime=#{createTime} where id=#{id}
  	</update>
  	
  	<select id="findList" parameterType="Map" resultType="com.you.a.entity.common.Product">
  		select * from product where 1=1 
  		<if test="name != null">
  			and name like '%${name}%' 
  		</if>
  		<if test="tags != null">
  			and tags in(${tags}) 
  		</if>
  		<if test="priceMin != null">
  			and price &gt; #{priceMin} 
  		</if>
  		<if test="priceMax != null">
  			and price &lt; #{priceMax} 
  		</if>
  		<if test="orderBy != null and sort != null">
  			order by ${orderBy} ${sort} 
  		</if>
  		<if test="offset != null and pageSize != null">
  			limit #{offset},#{pageSize}
  		</if>
  	</select>
  	
  	<select id="getTotal" parameterType="Map" resultType="Integer">
  		select count(*) from product where 1=1 
  		<if test="name != null">
  			and name like '%${name}%' 
  		</if>
  		<if test="tags != null">
  			and tags in(${tags}) 
  		</if>
  		<if test="priceMin != null">
  			and price &gt; #{priceMin} 
  		</if>
  		<if test="priceMax != null">
  			and price &lt; #{priceMax} 
  		</if>
  	</select>
  	
  	<select id="findById" parameterType="Long" resultType="com.you.a.entity.common.Product">
  		select * from product where id=#{value}
  	</select>
  	
  	<delete id="delete" parameterType="String">
  		delete from product where id in(${value})
  	</delete>
  </mapper>